# -*- coding: utf-8 -*-
"""Лаб.5

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T5iw5E4XC3bj3yqQyY_CYLQGvoQPAFR-
"""

# Лабораторная 5
# task_05_02_01
#
# Выполнила: Шишкина М.С.
# Группа: АДЭУ-211

def sgn(a):
    x = a
    y = a
    if a > 0:
        return 1
    elif a < 0:
        return -1
    else:
        return 0

x = float(input("Введите значение х : ")) 
y = float(input("Введите значение y : "))

z = ((sgn(x) + y**2)/(sgn(y) - abs(x)**0.5))

print("Ответ:", round(z,2))

# task_05_02_02

def avg(new_data):
    return sum(new_data) / len(new_data)

def cleared_data(data):
    new_data = []
    for x in data:
        if x != None:
            new_data.append(x)
    return new_data

n = int(input('Колличество измерений : '))
data = []

for i in range(n):
    dimension = input('Измерение {}-е: '.format(i + 1))
    if dimension == '-':
        data.append(None) 
    else:
        data.append(int(dimension))
    i += 1

print("Средняя температура:", avg(cleared_data(data)))

# task_05_02_03

lucky_num=[]
number=[]
lk_num = []

def is_lucky(num):
    even = 0
    odd = 0
    for i in map(int, str(num)):
        if i % 2 ==0:
            even += 1
        else:
            odd += 1
    if even == odd:
        lucky_num.append(num)
    else:
        pass

def lucky_numbers(a, b):  
     num = a   
     while num in range(a,b + 1):
      is_lucky(num)
      if num in lucky_num:
          lk_num.append(num)
          num += 1
      else:
          num += 1
      
     return lk_num

a = int(input("Первый номер билета: "))
b = int(input("Последний номер билета: "))
print(lucky_numbers(a, b))

# task_05_02_04

def is_leap(year):
    if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
        february_day = 29
    else:
        february_day = 28
    return february_day

def days(month, year):

    month_day_31 = [1,3,5,7,8,10,12]
    month_day_30 = [4,6,9,11]

    if month in month_day_31:
        date= 31
    elif month in month_day_30:
        date = 30
    else:
        date = is_leap(year)
    return date

def previous_date(day, month, year):

    if day == 1:
        month -= 1
        if month == 0:
            year -= 1
            month = 12      
        else:
            year = year
            month = month     
    else:
        day -= 1
        month = month
        year=year

    return day, month, year
  
def next_date(day, month, year):

    if day == days(month, year):
        month += 1
        if month == 13:
            month = 1
            year += 1
            day = 1
        else:
            month += 1
            year = year
            day = 1
    else:
        day += 1
        month = month
        year = year
    return day, month, year

day, month, year = input('День, месяц, год: ').split()
day = int(day)
month = int(month)
year = int(year)
print('Предыдущий день: ', previous_date(day,month,year))
print('Следующий день: ', next_date(day,month,year))

# task_05_02_05

def is_leap(year): 

    if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
        february_day = 29
    else:
        february_day = 28
    return february_day

def days(month, year):

    month_day_31 = [1,3,5,7,8,10,12]
    month_day_30 = [4,6,9,11]
    if month in month_day_31:
        date= 31
    elif month in month_day_30:
        date = 30
    else:
        date = is_leap(year)
    return date

def another_date(day, month, year, delta):
    if delta < 0:
        day += delta
        if day <= 0:
            month -= 1
            if month == 0:
                month = 12
                year -= 1
                day = days(month, year) + day
            else:
                month = month
                year = year
                day = days(month, year) + day
        else:
            day = day
            month = month
            year = year

    elif delta > 0:
        day += delta
        if day > days(month, year):
            day = day - days(month, year)
            month += 1
            if month > 12:
                month -= 12
                year += 1
            else:
                month += 1
                year = year

    else:
        day = day
        month = month
        year = year

    return day, month, year

for i in range(2):
    day, month, year = input('День, месяц, год через пробел: ').split()
    day = int(day)
    month = int(month)
    year = int(year)
    delta = int(input('Свдиг (может быть отрицательным): '))
    print('Новый день: ', another_date(day, month, year, delta))

# task_05_02_08


def print_with_border(s, k):
    s_len = len(s)
    print(k * (s_len + 2))
    print(k + s + k)
    print(k * (s_len + 2))

s = input("Введите строку: ")
k = input("Введите символ: ")

print_with_border(s, k)

# task_05_02_14

minus = []
plus = []
numbers = list(map(int,input().split()))
def split_numbers(numbers):
   for n in numbers:
     if n < 0:
        minus.append(n)
     else:
        plus.append(n)
   plus.sort()
   minus.sort()
   minus.reverse()
   return minus, plus

print(split_numbers(numbers))

# --------------
# Пример вывода:
#
# ([-5, -33], [0, 1, 4])

#task_05_02_16

def pow1(value, power):
    return value ** power 
       
def pow2(value, power):

    if power == 0 or value == 1:
        return value
    else:
        return value ** power 

print(pow1(5, 3))
print(pow2(5, 3))

# task_05_02_17.

def digits_sum(value):

    value_str = str(value)
    sum = 0
    value_len = len(value_str) 
    for i in range(value_len + 1):    
        sum += i
    return sum


def digits_count(value):

    value_str = str(value)
    value_len = len(value_str)
    return value_len


print(digits_sum(12345))
print(digits_count(12345))